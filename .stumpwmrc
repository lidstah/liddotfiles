;;; -*- lisp -*-
;;; #Date#: 30 May 2010 16:56

(in-package :stumpwm)

(set-font "-*-lucida-medium-r-normal-sans-10-*-*-*-*-*-*")
(set-normal-gravity :center)
(set-fg-color "grey")
(set-bg-color "gray10")
(set-border-color "gray20")
(set-focus-color "dimgray")
(set-unfocus-color   "grey16")
(set-win-bg-color    "grey6")
(setf *colors* (list "grey9"          ; 0 black
                     "palevioletred1" ; 1 red
                     "lightblue3"     ; 2 green
                     "bisque3"        ; 3 yellow
                     "steelblue3"     ; 4 blue
                     "slateblue1"     ; 5 magenta
                     "aquamarine4"    ; 6 cyan
                     "honeydew4"      ; 7 white
                     "thistle4"       ; 8 user
                     "lightskyblue4")); 9 user
(update-color-map (current-screen))
(set-msg-border-width 7)
(set-frame-outline-width 1)
(setf *window-border-style* :thin)
(setf *mouse-focus-policy* :click)
(define-key *root-map* (kbd "c") "exec urxvtc")
(set-contrib-dir "/usr/share/stumpwm")
(set-win-bg-color "grey10")
(load "/usr/share/stumpwm/mem.lisp")
(load "/usr/share/stumpwm/net.lisp")
(load "/usr/share/stumpwm/mpd.lisp")

(setf
	*mpd-modeline-fmt* "^2*%S^n : ^6*%a^n - ^3*%t^n - ^2*%e/%l^n"
	*timeout-wait* 10
	*transient-border-width* 7
	*message-window-gravity* :center
	*input-window-gravity* :bottom-left
	*mode-line-background-color* "black"
	*mode-line-foreground-color* "dimgray"
	*mode-line-border-color* "black"
	*mode-line-timeout* 3
	*mode-line-padding-y* 4
	*mode-line-position* :top)


(setf *screen-mode-line-format*
	(list ".: %g :: ^3*%W^n :: %M :: ^3*%l^n :: %m :: "
		'(:eval (run-shell-command "/home/lidstah/bin/stumpstats.sh | tr -d [:cntrl:]" t))))

(define-key *top-map* (kbd "Pause") "mpd-toggle-pause")
(define-key *top-map* (kbd "Print") "mpd-prev")
(define-key *top-map* (kbd "Scroll_Lock") "mpd-next")
(define-key *top-map* (kbd "M-Pause") "exec echo pause > $HOME/.mplayer_fifo")
(define-key *top-map* (kbd "M-Print") "exec echo seek -30 > $HOME/.mplayer_fifo")
(define-key *top-map* (kbd "M-Scroll_Lock") "exec echo seek +30 > $HOME/.mplayer_fifo")
(define-key *top-map* (kbd "M-h") "move-focus left")
(define-key *top-map* (kbd "M-l") "move-focus right")
(define-key *top-map* (kbd "M-j") "move-focus down")
(define-key *top-map* (kbd "M-k") "move-focus up")
(define-key *top-map* (kbd "C-M-h") "move-window left")
(define-key *top-map* (kbd "C-M-l") "move-window right")
(define-key *top-map* (kbd "C-M-j") "move-window down")
(define-key *top-map* (kbd "C-M-k") "move-window up")
(define-key *top-map* (kbd "M-s") "vsplit")
(define-key *top-map* (kbd "M-f") "hsplit")
(define-key *top-map* (kbd "M-i") "next-in-frame")
(define-key *top-map* (kbd "M-I") "prev-in-frame")
(define-key *top-map* (kbd "M-e") "fselect")
(define-key *top-map* (kbd "M-H") "exchange-direction left")
(define-key *top-map* (kbd "M-L") "exchange-direction right")
(define-key *top-map* (kbd "M-J") "exchange-direction down")
(define-key *top-map* (kbd "M-K") "exchange-direction up")
(define-key *top-map* (kbd "M-c") "mpd-connect")
(define-key *top-map* (kbd "M-C") "mpd-disconnect")
(define-key *top-map* (kbd "M-v") "show-window-properties")
(define-key *top-map* (kbd "M-V") "info")
(define-key *top-map* (kbd "M-!") "exec")
(define-key *top-map* (kbd "M-p") "exec dmenu_run -i -b -nb '#1c1c1c' -nf '#e3e0d7' -sb '#e3e0d7' -sf '#1c1c1c'")
(define-key *top-map* (kbd "M-:") "eval")
(define-key *top-map* (kbd "M-;") "colon")
(define-key *top-map* (kbd "M-W") "windowlist")
(define-key *top-map* (kbd "M-w") "frame-windowlist")
(define-key *top-map* (kbd "M-A") "time")
(define-key *top-map* (kbd "M-a") "title")
(define-key *top-map* (kbd "M-&") "meta M-f")
(define-key *top-map* (kbd "M-g") "vgroups")
(define-key *top-map* (kbd "M-Right") "gnext")
(define-key *top-map* (kbd "C-M-Right") "gnext-with-window")
(define-key *top-map* (kbd "M-Left") "gprev")
(define-key *top-map* (kbd "C-M-Left") "gprev-with-window")
(define-key *top-map* (kbd "M-t") "mode-line")
(define-key *top-map* (kbd "M-r") "iresize")
(define-key *top-map* (kbd "M-b") "banish")
(define-key *top-map* (kbd "M-z") "remove")
(define-key *top-map* (kbd "M-Return") "exec urxvtc")
(define-key *top-map* (kbd "M-m") "mark")
(define-key *top-map* (kbd "M-M") "gmove-marked")
(define-key *top-map* (kbd "C-M-m") "pull-marked")
(define-key *top-map* (kbd "M-o") "fullscreen")

(defcommand mymenu () ()
  (labels ((pick (options)
             (let ((selection (stumpwm::select-from-menu (current-screen) options "")))
               (cond
                 ((null selection)
                  (throw 'stumpwm::error "Abort."))
                 ((stringp (second selection))
                  (second selection))
                 (t
                  (pick (cdr selection)))))))
    (let ((choice (pick *app-menu*)))
      (run-shell-command choice))))

(defparameter *app-menu* '(("TV"
			    ;; sub menu
			    ("TF1" "TF1")
			    ("France2" "France2")
			    ("France3" "France3")
                            ("CANAL+" "CANAL")
			    ("France5" "France5")
			    ("ARTE" "ARTE")
			    ("M6" "M6")
			    ("W9" "W9")
			    ("Direct8" "Direct8")
			    ("NT1" "NT1")
			    ("NRJ12" "NRJ12")
			    ("DirectStar" "DirectStar")
			    ("France4" "France4")
			    ("TMC" "TMC")
			    ("BFMTV" "BFMTV")
			    ("iTELE" "iTELE")
			    ("LCP" "LCP")
			    ("Gulli" "Gulli")
			    ("FranceO" "FranceO")
			    ("NANTES" "NANTES"))
			   ("Books"
                            ;;submenu
                            ("Haskell" "zathura /home/lidstah/Documents/Haskell.pdf")
                            ("Haskell Wiki" "zathura /home/lidstah/Documents/Haskell_wiki.pdf"))
                           ("INTERNET"
                            ;; sub menu
                            ("Firefox" "firefox")
			    ("pidgin" "pidgin")
			    ("Wireshark" "wireshark"))
                           ("FUN"
                            ;; sub menu
                            ("option 2" "xlogo")
                            ("GnuChess" "xboard"))
                           ("WORK"
                            ;;submenu
                            ("LibreOffice" "libreoffice")
			    ("Leafpad" "leafpad")
			    ("Vim" "gvim"))
                           ("GRAPHICS"
                            ;;submenu
			    ("mypaint" "mypaint")
                            ("GIMP" "gimp"))))

(define-key *top-map* (kbd "M-P") "mymenu")

(setf *resize-increment* 40)
(defun update-resize-map ()
"on refait le mapping du mode iresize avec un incrément supérieur"
  (let ((m (setf *resize-map* (make-sparse-keymap))))
    (let ((i *resize-increment*))
    (labels ((dk (m k c) (define-key m k (format nil c i))))
      (dk m (kbd "k") "resize 0 -~D")
      (dk m (kbd "j") "resize 0 ~D")
      (dk m (kbd "h") "resize -~D 0")
      (dk m (kbd "l") "resize ~D 0")
      (dk m (kbd "RET") "exit-iresize")
      (dk m (kbd "ESC") "abort-iresize")
    M)))) (update-resize-map)
		
(setf (group-name (first (screen-groups (current-screen)))) "Main")
(run-commands "gnewbg trm" "gnewbg-float flt")
(run-shell-command "xsetroot -cursor_name left_ptr")
;;; vim:filetype=lisp: 
