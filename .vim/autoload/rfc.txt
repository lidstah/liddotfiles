*vim-rfc*  Handling RFCs like a boss.
*rfc*
                                                    ___
                  __                              /'___\
          __  __ /\_\    ___ ___            _ __ /\ \__/  ____
         /\ \/\ \\/\ \ /' __` __`\  _______/\`'__\ \ ,__\/'___\
         \ \ \_/ |\ \ \/\ \/\ \/\ \/\______\ \ \/ \ \ \_/\ \__/
          \ \___/  \ \_\ \_\ \_\ \_\/______/\ \_\  \ \_\\ \____\
           \/__/    \/_/\/_/\/_/\/_/         \/_/   \/_/ \/____/

  by Marco Hinz~

  Twitter: https://twitter.com/_mhinz_
  Github:  http://github.com/mhinz
  IRC:     mhi^ (Freenode)
>
  If you use any of my plugins, please star them on github. It's a great way
  of getting feedback and gives me the kick to put more time into their
  development.

  If you encounter any bugs or have feature requests, just open an issue
  report on Github.

  Thank you for flying mhi^ airlines. Get the Vim on!
<
==============================================================================
CONTENTS                                                          *rfc-contents*

    INTRO ........................................|rfc-intro|
    DEPENDENCIES .................................|rfc-dependencies|
    USAGE ........................................|rfc-usage|
    COLORS .......................................|rfc-colors|
    INTERNALS ....................................|rfc-internals|

==============================================================================
INTRO                                                                *rfc-intro*

vim-rfc is a plugin to query the RFC database and loading RFC/STD documents
into a Vim buffer.

It is mostly written in Ruby.

==============================================================================
DEPENDENCIES                                                  *rfc-dependencies*

The used SAX parser is provided by the Ruby gem nokogiri.
>
    gem install nokogiri
<
The performance reasons the parser is implemented in C and thus depends on
libxml2-dev and libxslt-dev.

==============================================================================
USAGE                                                                *rfc-usage*

..is really simple.

Query the database:~
>
    :RFC <case-insensitive regexp>
<
Rebuild cache and query the database:~
>
    :RFC! <case-insensitive regexp>
<
A new window with all found matches will be shown. Now you can simply use
|<cr>| to open the entry.

If you don't want to open anything, hit 'q'.

NOTE: Since regular expressions are used, ":RFC .*" will list all documents.
Makes it easy to search.

==============================================================================
COLORS                                                              *rfc-colors*

You can overwrite the highlight groups used by vim-rfc.

Example: "RFC0123: Nice RFC, yo."

    Hi group  |  Part          |  Default
    --------------------------------------------------
    RFCType   |  RFC           |  linked to Identifier
    RFCID     |  0123          |  linked to Number
    RFCDelim  |  :             |  linked to Delimiter
    RFCTitle  |  Nice RFC, yo. |  linked to Title

Example: (my terminal emulator supports 256 colors)
>
    highlight RFCType  ctermfg=240 ctermbg=NONE cterm=NONE
    highlight RFCID    ctermfg=215 ctermbg=NONE cterm=NONE
    highlight RFCTitle ctermfg=255 ctermbg=NONE cterm=NONE
    highlight RFCDelim ctermfg=240 ctermbg=NONE cterm=NONE
<
==============================================================================
INTERNALS                                                        *rfc-internals*

If you use this plugin for the first time it downloads an index file from the
internet. To parse that XML file a SAX parser, nokogiri, is used which is a
event-driven XML parser written in C.

The parse tree is saved in a Ruby hash and written to a cachefile in YAML
format. The file is located in ~/.vim-rfc.yml.

If you issue a query, the cachefile will be used for the lookup. The resulting
hash will be provided back to the Vim environment.

At the end the index file will be removed, since it's not needed anymore.

If you use the plugin for the second time, the cachefile will be used right
away and downloading the 8 MiB index will be omitted.

==============================================================================
vim: tw=78
